#!/bin/bash
#
# Bootstrap the dotfiles.
#
# Part of code is taken from the holman/dotfiles repository.
#
# Usage:
#
#   $ tool/bootstrap [link|gitconf]
#

info() {
  printf "\n  [ \033[34m.\033[0m ] $1"
}

success() {
  printf "\n  [ \033[32mOK\033[0m ] $1"
}

fail() {
  printf "\n  [ \033[31mFAIL\033[0m ] $1"
  exit 1
}

ask() {
  printf "\n  [ \033[33m?\033[0m ] $1 "
}

link_dotfiles() {
  info "Linking dotfiles..."

  src=~/.dotfiles/*/.[^.]*
  overwrite_all=false
  backup_all=false
  skip_all=false

  for dot in $src
  do
    dest=~/$(basename "$dot")

    if [ -f $dest ] || [ -d $dest ]
    then
      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$skip_all" == "false" ]
      then
        info "File already exists: `basename $dot`. What do you want to do?"
        info "Actions: [s]kip, [S]kip all, [o]verwrite, [O]verwrite all? "
        read -n 1 action

        case "$action" in
          o)
            overwrite=true
            ;;
          O)
            overwrite_all=true
            ;;
          s)
            skip=true
            ;;
          S)
            skip_all=true
            ;;
          *)
            fail "Incorrect value"
            exit 1
            ;;
        esac
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
      then
        rm -rf $dest
        success "Removed $dest"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
      then
        ln -s $dot $dest
      else
        success "Skipped $dot"
      fi
    else
      ln -s $dot $dest
    fi
  done
}

gitconf() {
  if which git > /dev/null
  then
    info "Configuring Git..."

    ask "What is your GitHub author name?"
    read -e git_name

    ask "What is your GitHub author email?"
    read -e git_email

    sed -e "s/NAME/$git_name/g" -e "s/EMAIL/$git_email/g" git/gitconfig \
    > ~/.gitconfig
  else
    info "You don't have Git installed."
  fi
}

case "$1" in
  "")
    link_dotfiles && echo && gitconf
    ;;
  link)
    link_dotfiles
    ;;
  git)
    gitconf
esac

echo -e "\n"
